# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.ssh.insert_key = false
  config.vm.synced_folder '.', '/vagrant', type: 'nfs'

  config.vm.define "jenkins" do |jenkins|
    jenkins.vm.hostname = "jenkins"
    jenkins.vm.box = "file:///tmp/virtualbox-base.box"
    jenkins.vm.network "forwarded_port", guest: 8080, host: 1234
    jenkins.vm.network :private_network, ip: "192.168.33.11"

    jenkins.vm.provider :jenkins do |v|
      v.gui = false
      v.memory = 256
      v.cpus = 1
      config.vm.synced_folder ".", "/vagrant", disabled: true
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--ioapic", "on"]
    end

    jenkins.vm.provision "shell", inline: "echo Jenkins Ready"
  end

  config.vm.define "staging" do |staging|
    staging.vm.hostname = "staging"
    staging.vm.box = "file:///tmp/virtualbox-base.box"
    staging.vm.network "forwarded_port", guest: 3003, host: 3003
    staging.vm.network :private_network, ip: "192.168.33.24"

    staging.vm.provider :nexus do |v|
      v.gui = false
      v.memory = 128
      v.cpus = 2
      config.vm.synced_folder ".", "/vagrant", disabled: true
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--ioapic", "on"]
    end

    staging.vm.provision "shell", inline: "echo web api server Ready"
  end

  config.vm.define "preprod" do |preprod|
    preprod.vm.hostname = "preprod"
    preprod.vm.box = "file:///tmp/virtualbox-base.box"
    preprod.vm.network "forwarded_port", guest: 3004, host: 3004
    preprod.vm.network :private_network, ip: "192.168.33.25"

    preprod.vm.provider :nexus do |v|
      v.gui = false
      v.memory = 128
      v.cpus = 2
      config.vm.synced_folder ".", "/vagrant", disabled: true
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--ioapic", "on"]
    end

    preprod.vm.provision "shell", inline: "echo web api server Ready"
  end

  config.vm.define "production" do |production|
    production.vm.hostname = "production"
    production.vm.box = "file:///tmp/virtualbox-base.box"
    production.vm.network "forwarded_port", guest: 3005, host: 3005
    production.vm.network :private_network, ip: "192.168.33.26"

    production.vm.provider :nexus do |v|
      v.gui = false
      v.memory = 128
      v.cpus = 2
      config.vm.synced_folder ".", "/vagrant", disabled: true
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--ioapic", "on"]
    end

    production.vm.provision "shell", inline: "echo web api server Ready"
  end

  # config.vm.define "artifact" do |artifact|
  #   artifact.vm.hostname = "artifact"
  #   artifact.vm.box = "file:///tmp/virtualbox-base.box"
  #   artifact.vm.network "forwarded_port", guest: 3006, host: 3006
  #   artifact.vm.network :private_network, ip: "192.168.33.27"

  #   artifact.vm.provider :nexus do |v|
  #     v.gui = false
  #     v.memory = 128
  #     v.cpus = 2
  #     config.vm.synced_folder ".", "/vagrant", disabled: true
  #     v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  #     v.customize ["modifyvm", :id, "--ioapic", "on"]
  #   end

  #   artifact.vm.provision "shell", inline: "echo web api server Ready"
  # end

  # config.vm.define "ansiblecontroller" do |ansiblecontroller|
  #   ansiblecontroller.vm.hostname = "ansiblecontroller"
  #   ansiblecontroller.vm.box = "file:///tmp/virtualbox-base.box"
  #   ansiblecontroller.vm.network "forwarded_port", guest: 3001, host: 3001
  #   ansiblecontroller.vm.network :private_network, ip: "192.168.33.23"

  #   ansiblecontroller.vm.provider :nexus do |v|
  #     v.gui = false
  #     v.memory = 128
  #     v.cpus = 2
  #     config.vm.synced_folder ".", "/vagrant", disabled: true
  #     v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  #     v.customize ["modifyvm", :id, "--ioapic", "on"]
  #   end

  #   ansiblecontroller.vm.provision "shell", inline: "echo ansible controller 1 Ready"
  # end

  config.vm.define "ansible" do |ansible|
    ansible.vm.hostname = "ansible"
    ansible.vm.box = "file:///tmp/virtualbox-base.box"
    ansible.vm.network :private_network, ip: "192.168.33.10"

    ansible.vm.provider :ansible do |v|
      v.gui = false
      v.memory = 256
      v.cpus = 1
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--ioapic", "on"]
    end

    ansible.vm.provision "file", source: "./ansible_scripts/helpers/java-8.yml", destination: "~/java-8.yml"
    ansible.vm.provision "file", source: "./ansible_scripts/jenkins-playbook.yml", destination: "~/jenkins-playbook.yml"
    ansible.vm.provision "file", source: "./ansible_scripts/helpers/requirements.yml", destination: "~/requirements.yml"
    ansible.vm.provision "file", source: "./ansible_scripts/helpers/hosts_local", destination: "~/hosts"
    ansible.vm.provision "shell", inline: "yum -y install epel-release; yum -y install ansible git"
    ansible.vm.provision "shell", inline: "cat hosts > /etc/ansible/hosts"
    ansible.vm.provision "shell", inline: "ansible-galaxy install -r requirements.yml"
  end

end
